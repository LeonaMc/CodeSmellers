======================================== LargeClass ========================================
47.83% of files affected by Large Class

Class Board has length of 397
Possible cause for large file is
Board has 18 Methods
Possible cause for large file is
Board has 9 Declared Fields

Class CardSetup has length of 210
Possible cause for large file is
CardSetup has 10 Methods
Possible cause for large file is
CardSetup has 12 Declared Fields

Class Commands has length of 233
Possible cause for large file is
Commands has 12 Methods

Class InputOutput has length of 397
Possible cause for large file is
InputOutput has 36 Methods
Possible cause for large file is
InputOutput has 10 Declared Fields

Class MovementInput has length of 154
Possible cause for large file is
MovementInput has 13 Methods

Class Player has length of 228
Possible cause for large file is
Player has 47 Methods
Possible cause for large file is
Player has 27 Declared Fields

Class PlayerManager has length of 293
Possible cause for large file is
PlayerManager has 21 Methods
Possible cause for large file is
PlayerManager has 9 Declared Fields

Class Question has length of 1031
Possible cause for large file is
Question has 48 Methods
Possible cause for large file is
Question has 17 Declared Fields

Class RollDiceForFirstTurn has length of 184
Possible cause for large file is
RollDiceForFirstTurn has 9 Methods
Possible cause for large file is
RollDiceForFirstTurn has 6 Declared Fields

Class RoomEntrance has length of 462
Possible cause for large file is
RoomEntrance has 23 Methods

Class RoomMovement has length of 335
Possible cause for large file is
RoomMovement has 15 Methods
======================================== LongMethod ========================================
52.17% of files affected by Long Method
Method moveWeapon in Board.java is 49 lines long
Method starts at line 86 and ends at line 135 in Board.java

Method paintComponent in ClueSheet.java is 34 lines long
Method starts at line 52 and ends at line 86 in ClueSheet.java

Method wasd in Commands.java is 53 lines long
Method starts at line 12 and ends at line 65 in Commands.java

Method moveAllowed in FetchMoveAndCheck.java is 37 lines long
Method starts at line 19 and ends at line 56 in FetchMoveAndCheck.java

Method helpInstructions in Help.java is 98 lines long
Method starts at line 12 and ends at line 110 in Help.java

Method actionPerformed in InputOutput.java is 64 lines long
Method starts at line 52 and ends at line 116 in InputOutput.java

Method movementX in MovementInput.java is 39 lines long
Method starts at line 61 and ends at line 100 in MovementInput.java

Method getCardSetup in PlayerManager.java is 40 lines long
Method starts at line 253 and ends at line 293 in PlayerManager.java

Method moveToHall in Question.java is 50 lines long
Method starts at line 574 and ends at line 624 in Question.java

Method findHighestRoll in RollDiceForFirstTurn.java is 87 lines long
Method starts at line 28 and ends at line 115 in RollDiceForFirstTurn.java

Method isRoomEntrance in RoomEntrance.java is 324 lines long
Method starts at line 16 and ends at line 340 in RoomEntrance.java

Method startTurnInRoom in RoomMovement.java is 136 lines long
Method starts at line 17 and ends at line 153 in RoomMovement.java

======================================== LongParameter ========================================
17.39% of files affected by Long Parameter List

Name of affected class = CardSetup
Number of affected methods = 1
10.00% of methods affected
Method names

showFrame has 4 parameters
Parameter types are
String
Dimension
JPanel
Point


Name of affected class = MovementInput
Number of affected methods = 2
15.38% of methods affected
Method names

movementY has 4 parameters
Parameter types are
FetchMoveAndCheck
String
String
int

movementX has 4 parameters
Parameter types are
FetchMoveAndCheck
String
String
int


Name of affected class = Question
Number of affected methods = 2
4.17% of methods affected
Method names

showCardOrNextPlayer has 4 parameters
Parameter types are
String
String
String
int

checkIfPlayerHasCards has 4 parameters
Parameter types are
String
String
String
int


Name of affected class = RoomMovement
Number of affected methods = 4
26.67% of methods affected
Method names

toStudy has 4 parameters
Parameter types are
int
int
int
int

toLounge has 4 parameters
Parameter types are
int
int
int
int

toConservatory has 4 parameters
Parameter types are
int
int
int
int

toKitchen has 4 parameters
Parameter types are
int
int
int
int

======================================== LazyClass ========================================
52.17% of files affected by Lazy Class
Class Card has been flagged as a lazy class because it has less than 150 lines of code

Possible false positive result as Card has public method(s)
public final int getRow
public final ImageIcon getCardIcon
public final int getCol
public final String getCardName

Class Cards has been flagged as a lazy class because it has less than 150 lines of code

Possible false positive result as Cards has public method(s)
public ArrayList getCards
public void copyCard
public JPanel getPane
public void setClueSheet
public void addCards
public ArrayList getNames
public void setPaneLayout
public int getNumCards
public ClueSheet getClueSheet
public void setPane

Class ClueSheet has been flagged as a lazy class because it has less than 150 lines of code

Possible false positive result as ClueSheet is referenced in these classes
Cards

Possible false positive result as ClueSheet has public method(s)
public ArrayList getViewed
public void addToViewedCard
public void addExtraCards
public BufferedImage getSheet
public void readSheet

Class Dice has been flagged as a lazy class because it has less than 150 lines of code

Possible false positive result as Dice has public method(s)
public static int rollDie1
public static int rollDie2
public static int rollTotal

Class FetchMoveAndCheck has been flagged as a lazy class because it has less than 150 lines of code

Possible false positive result as FetchMoveAndCheck has public method(s)
public boolean moveAllowed

Class FillOutOfBounds has been flagged as a lazy class because it has less than 150 lines of code

Possible false positive result as FillOutOfBounds is referenced in these classes
FetchMoveAndCheck

Possible false positive result as FillOutOfBounds has public method(s)
public static int getINDEX
public static String[] getOutOfBounds

Class Help has been flagged as a lazy class because it has less than 150 lines of code

Possible false positive result as Help has public method(s)
public static void helpInstructions

Class Log has been flagged as a lazy class because it has less than 150 lines of code

Possible false positive result as Log has public method(s)
public static void createHiddenFrame
public static void disposeLog
public static void setLogVisible
public void showLog

Class Main has been flagged as a lazy class because it has less than 150 lines of code

Possible false positive result as Main has public method(s)
public static void main

Class PathConstants has been flagged as a lazy class because it has less than 150 lines of code
Possible contributing factors are
PathConstants has 0 methods which may indicate an unfinished class

Class PlayerIcons has been flagged as a lazy class because it has less than 150 lines of code

Class Weapons has been flagged as a lazy class because it has less than 150 lines of code

Possible false positive result as Weapons has public method(s)
public ArrayList getLabels

======================================== PrimitiveObsession ========================================
13.04% of files affected by Primitive Obsession
Class Player has 14 primitive fields and 13 primitive methods

List of Primitive Fields
int moves
boolean rolledDice
boolean inRoom
boolean usedSecretPassage
boolean secretPassage
boolean justLeftRoom
boolean justEntered
boolean startInRoom
boolean inCorridor
boolean accused
boolean knockedOut
boolean seenCard
boolean isTurn
int index

List of Primitive methods
int getIndex
boolean isUsedSecretPassage
boolean isSecretPassage
boolean isRolledDice
boolean isInRoom
boolean isTurn
boolean isKnockedOut
boolean isStartInRoom
int getMoves
boolean isJustEntered
boolean isJustLeftRoom
boolean isInCorridor
boolean hasSeenCard

Class Question has 9 primitive fields and 8 primitive methods

List of Primitive Fields
int playerAccused
int hasCard
int currentPlayerToShowCards
int iconNotControlled
int playerIndexWhoAskedQuestion
boolean playerFound
boolean accusationInProgress
int questionNumber
int knockoutCount

List of Primitive methods
boolean isAccusationInProgress
int getCurrentPlayerToShowCards
int getPlayerIndexWhoAskedQuestion
int getCharacterIndex
int findPlayerWithCharacterAccused
int getHasCard
int haveCardOrDone
int handScreenOver

Class RoomEntrance has 0 primitive fields and 10 primitive methods

List of Primitive methods
boolean diningRoomEntrance
boolean conservatoryEntrance
boolean loungeEntrance
boolean hallEntrance
boolean basementEntrance
boolean studyEntrance
boolean libraryEntrance
boolean kitchenEntrance
boolean ballroomEntrance
boolean billiardEntrance

======================================== TooManyLiterals ========================================
Project is clean for Too Many Literals code smell

======================================== FeatureEnvy ========================================
69.57% of files affected by Feature Envy

Board:
calls InputOutput 69 times
calls Board 20 times
calls FillOutOfBounds 7 times
calls Question 68 times

Cards:
calls Player 7 times
calls Question 3 times

CardSetup:
calls Player 5 times
calls Card 20 times
calls FillOutOfBounds 13 times
calls Question 41 times
calls Cards 11 times

ClueSheet:
calls Card 16 times
calls ClueSheet 3 times
calls Cards 12 times

Commands:
calls InputOutput 29 times
calls Weapons 3 times
calls Question 17 times

FetchMoveAndCheck:
calls Card 11 times
calls Question 12 times

Help:
calls Weapons 21 times

InputOutput:
calls Player 22 times
calls Card 29 times
calls Weapons 41 times
calls Question 48 times

MovementInput:
calls Question 43 times

Player:
calls InputOutput 3 times
calls Card 9 times
calls Question 24 times
calls Cards 3 times

PlayerManager:
calls Player 34 times
calls Weapons 5 times

Question:
calls Log 130 times
calls Weapons 135 times
calls Question 183 times

RollDiceForFirstTurn:
calls Player 47 times
calls InputOutput 11 times

RoomEntrance:
calls Question 224 times

RoomMovement:
calls Weapons 47 times
calls Question 77 times

Weapons:
calls Player 3 times

Board:
calls InputOutput 69 times
calls Board 20 times
calls FillOutOfBounds 7 times
calls Question 68 times

Cards:
calls Player 7 times
calls Question 3 times

CardSetup:
calls Player 5 times
calls Card 20 times
calls FillOutOfBounds 13 times
calls Question 41 times
calls Cards 11 times

ClueSheet:
calls Card 16 times
calls ClueSheet 3 times
calls Cards 12 times

Commands:
calls InputOutput 29 times
calls Weapons 3 times
calls Question 17 times

FetchMoveAndCheck:
calls Card 11 times
calls Question 12 times

Help:
calls Weapons 21 times

InputOutput:
calls Player 22 times
calls Card 29 times
calls Weapons 41 times
calls Question 48 times

MovementInput:
calls Question 43 times

Player:
calls InputOutput 3 times
calls Card 9 times
calls Question 24 times
calls Cards 3 times

PlayerManager:
calls Player 34 times
calls Weapons 5 times

Question:
calls Log 130 times
calls Weapons 135 times
calls Question 183 times

RollDiceForFirstTurn:
calls Player 47 times
calls InputOutput 11 times

RoomEntrance:
calls Question 224 times

RoomMovement:
calls Weapons 47 times
calls Question 77 times

Weapons:
calls Player 3 times
